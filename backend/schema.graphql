"""
Autogenerated input type of CreatePost
"""
input CreatePostInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  title: String!
}

"""
Autogenerated return type of CreatePost
"""
type CreatePostPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  name: String!
  password: String!
  passwordConfirmation: String!
  screenName: String!
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: Viewer
}

"""
Autogenerated input type of FollowUser
"""
input FollowUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  followId: Int!
}

"""
Autogenerated return type of FollowUser
"""
type FollowUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  isFollowing: Boolean
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Autogenerated input type of LikePost
"""
input LikePostInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  postId: Int!
}

"""
Autogenerated return type of LikePost
"""
type LikePostPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  isLiking: Boolean
}

type Mutation {
  createPost(input: CreatePostInput!): CreatePostPayload
  createUser(input: CreateUserInput!): CreateUserPayload
  followUser(input: FollowUserInput!): FollowUserPayload
  likePost(input: LikePostInput!): LikePostPayload
  unfollowUser(input: UnfollowUserInput!): UnfollowUserPayload
  unlikePost(input: UnlikePostInput!): UnlikePostPayload
}

enum OrderDirection {
  """
  昇順ソート
  """
  ASC

  """
  降順ソート
  """
  DESC
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Post {
  author: User!
  content: String!
  createdAt: ISO8601DateTime!
  id: ID!
  likedUsers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  title: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Post.
"""
type PostConnection {
  """
  A list of edges.
  """
  edges: [PostEdge]

  """
  A list of nodes.
  """
  nodes: [Post]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Post
}

input PostsOrderInput {
  direction: OrderDirection
  field: PostsOrderInputField
}

enum PostsOrderInputField {
  """
  投稿日
  """
  createdAt

  """
  更新日
  """
  updatedAt
}

type Query {
  post(
    """
    ID
    """
    id: Int
  ): Post
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    投稿者ID
    """
    authorId: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    ソート
    """
    orderBy: PostsOrderInput
  ): PostConnection!
  user(
    """
    ユーザー名
    """
    screenName: String!
  ): User
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  viewer: Viewer
}

"""
Autogenerated input type of UnfollowUser
"""
input UnfollowUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  followId: Int!
}

"""
Autogenerated return type of UnfollowUser
"""
type UnfollowUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  isFollowing: Boolean
}

"""
Autogenerated input type of UnlikePost
"""
input UnlikePostInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  postId: Int!
}

"""
Autogenerated return type of UnlikePost
"""
type UnlikePostPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  isLiking: Boolean
}

type User {
  activated: Boolean!
  admin: Boolean!
  createdAt: ISO8601DateTime!
  followers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  followings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  id: ID!
  likePosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
  name: String!
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
  screenName: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]

  """
  A list of nodes.
  """
  nodes: [User]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

type Viewer {
  activated: Boolean!
  admin: Boolean!
  createdAt: ISO8601DateTime!
  email: String!
  followers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  followings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  id: ID!
  likePosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
  name: String!
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
  screenName: String!
  updatedAt: ISO8601DateTime!
}